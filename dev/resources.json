{
  "AutoScalingGroupBase": {
    "Type": "AWS::AutoScaling::AutoScalingGroup",
    "Description": "Auto scaling group base instance",
    "Properties": {
      "AvailabilityZones": [
        { "Fn::Select": [0, { "Ref": "AvailabilityZones" }] }
      ],
      "Cooldown":        "500",
      "DesiredCapacity": { "Ref": "InstanceCount" },
      "HealthCheckGracePeriod": 1000,
      "InstanceId":             { "Ref": "EC2InstanceBase" },
      "LoadBalancerNames": [
        { "Ref": "ElasticLoadBalancerBase" }
      ],
      "MaxSize": { "Ref": "AutoScalingGroupMaxSize" },
      "MinSize": { "Ref": "AutoScalingGroupMinSize" },
      "Tags": [
        {
          "Key":   "Environment",
          "Value": { "Ref": "Environment" },
          "PropagateAtLaunch": true
        },
        {
          "Key":   "Name",
          "Value": {
            "Fn::Join": [
              "-", [
                "base", 
                { "Ref": "Environment" }, 
                { "Ref": "VersionString" }
              ]
            ]
          },
          "PropagateAtLaunch": true
        },
        {
          "Key":   "Version",
          "Value": { "Ref": "Version" },
          "PropagateAtLaunch": true
        }
      ],
      "VPCZoneIdentifier": [
        { "Ref": "SubnetPrivate" }
      ]
    }
  },
  "EC2InstanceBase": {
    "Type": "AWS::EC2::Instance",
    "Properties": {
      "ImageId":      { "Ref": "InstanceAmiId" },
      "InstanceType": "t2.medium",
      "SecurityGroupIds": [
        { "Ref": "SecurityGroupHttp" }
      ],
      "SubnetId": { "Ref": "SubnetPrivate" }
    }
  },
  "EC2InstanceJumpBox": {
    "Type": "AWS::EC2::Instance",
    "Properties": {
      "ImageId":      { "Ref": "JumpBoxAmiId" },
      "InstanceType": "t1.micro",
      "SecurityGroupIds": [
        { "Ref": "SecurityGroupHttp" },
        { "Ref": "SecurityGroupSsh" }
      ],
      "SubnetId": { "Ref": "SubnetPrivate" },
      "Tags": [
        {
          "Key":   "Environment",
          "Value": { "Ref": "Environment" }
        },
        {
          "Key":   "Name",
          "Value": {
            "Fn::Join": ["-", 
              [
                "jumpbox", 
                { "Ref": "Environment" },
                { "Ref": "VersionString" }
              ]
            ]
          }
        },
        {
          "Key":   "Version",
          "Value": { "Ref": "Version" }
        }
      ]
    }
  },
  "EC2InstanceNat": {
    "Type": "AWS::EC2::Instance",
    "Properties": {
      "ImageId":      { "Ref": "NatAmiId" },
      "InstanceType": "t1.micro",
      "SecurityGroupIds": [
        { "Ref": "SecurityGroupHttp" }
      ],
      "SubnetId": { "Ref": "SubnetPublic" },
      "Tags": [
        {
          "Key":   "Environment",
          "Value": { "Ref": "Environment" }
        },
        {
          "Key":   "Name",
          "Value": {
            "Fn::Join": [
              "-", [
                "nat", 
                { "Ref": "Environment" }, 
                { "Ref": "VersionString" }
              ]
            ]
          }
        },
        {
          "Key":   "Version",
          "Value": { "Ref": "Version" }
        }
      ]
    }
  },
  "ElasticLoadBalancerBase": {
    "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
    "Description": "Elastic load balancer for auto scaling group base",
    "Properties": {
      "LoadBalancerName": {
        "Fn::Join": [
          "-", [
            "base", 
            { "Ref": "Environment" }, 
            { "Ref": "VersionString" }
          ]
        ]
      },
      "Listeners": [
        {
          "InstancePort":     "80",
          "InstanceProtocol": "http",
          "LoadBalancerPort": "80",
          "Protocol":         "http"
        }
      ],
      "SecurityGroups": [
        { "Ref": "SecurityGroupHttp" }
      ],
      "Subnets": [
        { "Ref": "SubnetPrivate" }
      ]
    }
  },
  "ElasticIpJumpBox": {
    "Type": "AWS::EC2::EIP",
    "Properties": {
      "InstanceId": { "Ref": "EC2InstanceJumpBox" },
      "Domain":     { "Ref": "VirtualPrivateCloudOnMyBlock" }
    }
  },
  "InternetGateway": {
    "Type": "AWS::EC2::InternetGateway",
    "Properties": {
      "Tags": [
        {
          "Key":   "Environment",
          "Value": { "Ref": "Environment" }
        },
        {
          "Key":   "Name",
          "Value": { 
            "Fn::Join": ["-", 
              [
                "ig", 
                { "Ref": "Environment" }, 
                { "Ref": "VersionString" }
              ]
            ]
          }
        },
        {
          "Key":   "Version",
          "Value": { "Ref": "Version" }
        }
      ]
    }
  },
  "RouteTable": {
    "Type": "AWS::EC2::RouteTable",
    "Properties": {
      "Tags": [
        {
          "Key":   "Environment",
          "Value": { "Ref": "Environment" }
        },
        {
          "Key":   "Name",
          "Value": {
            "Fn::Join": [
              "-", [
                "rt", 
                { "Ref": "Environment" }, 
                { "Ref": "VersionString" }
              ]
            ]
          }
        },
        {
          "Key":   "Version",
          "Value": { "Ref": "Version" }
        }
      ],
      "VpcId": { "Ref": "VirtualPrivateCloudOnMyBlock" }
    }
  },
  "SecurityGroupHttp": {
    "Type": "AWS::EC2::SecurityGroup",
    "Properties": {
      "GroupDescription": "Security Group HTTP",
      "SecurityGroupEgress": [
        {
          "CidrIp":     "0.0.0.0/0",
          "FromPort":   80,
          "IpProtocol": "tcp",
          "ToPort":     80
        }
      ],
      "SecurityGroupIngress": [
        {
          "CidrIp":     "0.0.0.0/0",
          "FromPort":   80,
          "IpProtocol": "tcp",
          "ToPort":     80
        }
      ],
      "Tags": [
        {
          "Key":   "Environment",
          "Value": { "Ref": "Environment" }
        },
        {
          "Key":   "Name",
          "Value": {
            "Fn::Join": [
              "-", [
                "sg1", 
                { "Ref": "Environment" }, 
                { "Ref": "VersionString" }
              ]
            ]
          }
        },
        {
          "Key":   "Version",
          "Value": { "Ref": "Version" }
        }
      ],
      "VpcId": { "Ref": "VirtualPrivateCloudOnMyBlock" }
    }
  },
  "SecurityGroupSsh": {
    "Type": "AWS::EC2::SecurityGroup",
    "Properties": {
      "GroupDescription": "Security Group SSH",
      "SecurityGroupIngress": [
        {
          "CidrIp":     "0.0.0.0/0",
          "FromPort":   22,
          "IpProtocol": "tcp",
          "ToPort":     22
        }
      ],
      "Tags": [
        {
          "Key":   "Environment",
          "Value": { "Ref": "Environment" }
        },
        {
          "Key":   "Name",
          "Value": {
            "Fn::Join": [
              "-", [
                "ssh", 
                { "Ref": "Environment" }, 
                { "Ref": "VersionString" }
              ]
            ]
          }
        },
        {
          "Key":   "Version",
          "Value": { "Ref": "Version" }
        }
      ],
      "VpcId": { "Ref": "VirtualPrivateCloudOnMyBlock" }
    }
  },
  "SubnetPrivate": {
    "Type": "AWS::EC2::Subnet",
    "Properties": {
      "AvailabilityZone": {
        "Fn::Select": [0, { "Ref": "AvailabilityZones" }]
      },
      "CidrBlock": { "Ref": "SubnetPrivateCidrBlock" },
      "Tags": [
        {
          "Key":   "Environment",
          "Value": { "Ref": "Environment" }
        },
        {
          "Key":   "Name",
          "Value": {
            "Fn::Join": ["-",
              [
                "private", 
                { "Ref": "Environment" }, 
                { "Ref": "VersionString" }
              ]
            ]
          }
        },
        {
          "Key":   "Version",
          "Value": { "Ref": "Version" }
        }
      ],
      "VpcId":     { "Ref": "VirtualPrivateCloudOnMyBlock" }
    }
  },
  "SubnetPublic": {
    "Type": "AWS::EC2::Subnet",
    "Properties": {
      "AvailabilityZone": {
        "Fn::Select": [0, { "Ref": "AvailabilityZones" }]
      },
      "CidrBlock": { "Ref": "SubnetPublicCidrBlock" },
      "Tags": [
        {
          "Key":   "Environment",
          "Value": { "Ref": "Environment" }
        },
        {
          "Key":   "Name",
          "Value": {
            "Fn::Join": ["-",
              [
                "public", 
                { "Ref": "Environment" }, 
                { "Ref": "VersionString" }
              ]
            ]
          }
        },
        {
          "Key":   "Version",
          "Value": { "Ref": "Version" }
        }
      ],
      "VpcId": { "Ref": "VirtualPrivateCloudOnMyBlock" }
    }
  },
  "SubnetRouteTableAssociationPrivate": {
    "Type": "AWS::EC2::SubnetRouteTableAssociation",
    "Properties": {
      "RouteTableId": { "Ref": "RouteTable" },
      "SubnetId":     { "Ref": "SubnetPrivate" }
    }
  },
  "SubnetRouteTableAssociationPublic": {
    "Type": "AWS::EC2::SubnetRouteTableAssociation",
    "Properties": {
      "RouteTableId": { "Ref": "RouteTable" },
      "SubnetId":     { "Ref": "SubnetPublic" }
    }
  },
  "VirtualPrivateCloudOnMyBlock": {
    "Type": "AWS::EC2::VPC",
    "Properties": {
      "CidrBlock": { "Ref": "VpcCidrBlock" },
      "Tags": [
        {
          "Key":   "Environment",
          "Value": { "Ref": "Environment" }
        },
        {
          "Key":   "Name",
          "Value": {
            "Fn::Join": ["-",
              [
                "vpc", 
                { "Ref": "Environment" }, 
                { "Ref": "VersionString" }
              ]
            ]
          }
        },
        {
          "Key":   "Version",
          "Value": { "Ref": "Version" }
        }
      ]
    }
  },
  "VirtualPrivateCloudGatewayAttachment": {
    "Type": "AWS::EC2::VPCGatewayAttachment",
    "Properties": {
      "InternetGatewayId": { "Ref": "InternetGateway" },
      "VpcId":             { "Ref": "VirtualPrivateCloudOnMyBlock" }
    }
  },
  "VPCPeeringConnection0": {
    "Type":        "AWS::EC2::VPCPeeringConnection",
    "Condition":   "PeerVpcIdsExist",
    "Description": "VPC Peering Connection 1",
    "Properties": {
      "PeerVpcId": { "Fn::Select": [0, { "Ref": "PeerVpcIds" }] },
      "Tags": [
        {
          "Key":   "Environment",
          "Value": { "Ref": "Environment" }
        },
        {
          "Key":   "Name",
          "Value": {
            "Fn::Join": ["-",
              [
                "peerconnection", 
                { "Ref": "Environment" }, 
                { "Ref": "VersionString" }
              ]
            ]
          }
        },
        {
          "Key":   "Version",
          "Value": { "Ref": "Version" }
        }
      ],
      "VpcId": { "Ref": "VirtualPrivateCloudOnMyBlock" }
    }
  },
  "VPCPeeringConnectionRoute": {
    "Type":      "AWS::EC2::Route",
    "Condition": "PeerVpcIdsExist",
    "Properties": {
      "DestinationCidrBlock": {
        "Fn::Select": [0, { "Ref": "PeerVpcCidrBlocks" }]
      },
      "RouteTableId":           { "Ref": "RouteTable" },
      "VpcPeeringConnectionId": { "Ref": "VPCPeeringConnection0" }
    }
  }
}
